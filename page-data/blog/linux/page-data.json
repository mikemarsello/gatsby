{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/linux","result":{"data":{"markdownRemark":{"html":"<h2>Distro</h2>\n<p>Distro hopping is fun but I always end up back with <a href=\"https://linuxmint.com/\">Linux Mint</a>. Things always just end up going bad with Arch-based distros requiring troubleshooting to maintain the OS whereas Mint just works. The cinnamon desktop environment is full-featured and runs fine on any modern hardware.</p>\n<h2>Conky</h2>\n<p>Don't use the conky manager or the conky included in the LM repo. Instead, use the lazuli option from\n<a href=\"https://github.com/erikdubois/Aureola\">https://github.com/erikdubois/Aureola</a>. Navigate to that directory and the commands are there.</p>\n<h2>Terminator Dracula theme (copy into ~/.config/terminator/config)</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[global_config]\n  window_state = maximise\n  handle_size = 0\n  title_hide_sizetext = True\n  title_transmit_fg_color = &quot;#bd93f9&quot;\n  title_inactive_fg_color = &quot;#f8f8f2&quot;\n  title_receive_bg_color = &quot;#282a36&quot;\n  title_transmit_bg_color = &quot;#282a36&quot;\n  title_receive_fg_color = &quot;#8be9fd&quot;\n  tab_position = hidden\n  title_inactive_bg_color = &quot;#282a36&quot;\n[keybindings]\n[profiles]\n  [[default]]\n    scrollbar_position = hidden\n    palette = &quot;#000000:#ff5555:#50fa7b:#f1fa8c:#bd93f9:#ff79c6:#8be9fd:#bbbbbb:#555555:#ff5555:#50fa7b:#f1fa8c:#bd93f9:#ff79c6:#8be9fd:#ffffff&quot;\n    font = Noto Sans Mono 14\n    background_image = None\n    cursor_shape = underline\n    use_system_font = False\n    cursor_color = &quot;#bbbbbb&quot;\n    foreground_color = &quot;#f8f8f2&quot;\n    update_records = False\n    login_shell = True\n    copy_on_selection = True\n    background_color = &quot;#1e1f29&quot;\n    cursor_blink = True\n    scrollback_infinite = True\n  [[terminator_default]]\n    palette = &quot;#44475a:#ff5555:#50fa7b:#ffb86c:#3465a4:#ff79c6:#f1fa8c:#44475a:#44475a:#ff5555:#50fa7b:#ffb86c:#729fcf:#ad7fa8:#f1fa8c:#44475a&quot;\n    copy_on_selection = True\n    background_color = &quot;#282a36&quot;\n    background_image = None\n    foreground_color = &quot;#f8f8f2&quot;\n[layouts]\n  [[default]]\n    [[[child1]]]\n      type = Terminal\n      parent = window0\n      profile = default\n      command = &quot;&quot;\n    [[[window0]]]\n      type = Window\n      parent = &quot;&quot;\n[plugins]</code></pre></div>\n<h2>Node Version Manager</h2>\n<p><a href=\"https://github.com/creationix/nvm\">https://github.com/creationix/nvm</a></p>\n<p>Install the latest stable version with</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">nvm <span class=\"token function\">install</span> --lts</code></pre></div>\n<p>If you run into issues with the default version not being set correctly add the following with the version you want</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">nvm <span class=\"token builtin class-name\">alias</span> default <span class=\"token punctuation\">{</span>version number<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Screen Resolution Issues</h2>\n<p>Using two monitors can cause problems if one is HDMI and the other VGA. Add this command under Startup Applications wih 5 second delay. Get the name of the monitor under the Display Settings to replace \"DP-1\" and update its dimensions if necessary in the following command.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">xrandr --addmode DP-1 1920x1080</code></pre></div>\n<h2>Vim configuration</h2>\n<p>This is ripped off the interwebs and should provide line numbers, basic syntax highlighting etc.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"\"</span>\"<span class=\"token string\">\" Enable Vundle: vim plugin manager\n\n\"</span> required before Vundle initialization\n<span class=\"token string\">\" set nocompatible        \"</span> disable compatibility mode with <span class=\"token function\">vi</span>\n<span class=\"token string\">\" filetype off            \"</span> disable filetype detection <span class=\"token punctuation\">(</span>but re-enable later, see below<span class=\"token punctuation\">)</span>\n\n<span class=\"token string\">\" set the runtime path to include Vundle, and initialize\n\"</span> <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">rtp</span><span class=\"token operator\">+=</span>~/.vim/bundle/Vundle.vim\n<span class=\"token string\">\" call vundle#begin()\n\"</span> Plugin <span class=\"token string\">'VundleVim/Vundle.vim'</span>\n<span class=\"token string\">\" Plugin 'wting/rust.vim' \"</span> <span class=\"token builtin class-name\">enable</span> syntax highlighting <span class=\"token keyword\">for</span> rust\n<span class=\"token string\">\" call vundle#end()\n\n\n\"</span>\"<span class=\"token string\">\"\"</span> Basic Behavior\n\n<span class=\"token builtin class-name\">set</span> number              <span class=\"token string\">\" show line numbers\nset wrap                \"</span> wrap lines\n<span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span>utf-8      <span class=\"token string\">\" set encoding to UTF-8 (default was \"</span>latin1<span class=\"token string\">\")\nset mouse=a             \"</span> <span class=\"token builtin class-name\">enable</span> mouse support <span class=\"token punctuation\">(</span>might not work well on Mac OS X<span class=\"token punctuation\">)</span>\n<span class=\"token builtin class-name\">set</span> wildmenu            <span class=\"token string\">\" visual autocomplete for command menu\nset lazyredraw          \"</span> redraw <span class=\"token function\">screen</span> only when we need to\n<span class=\"token builtin class-name\">set</span> showmatch           <span class=\"token string\">\" highlight matching parentheses / brackets [{()}]\nset laststatus=2        \"</span> always show statusline <span class=\"token punctuation\">(</span>even with only single window<span class=\"token punctuation\">)</span>\n<span class=\"token builtin class-name\">set</span> ruler               <span class=\"token string\">\" show line and column number of the cursor on right side of statusline\nset visualbell          \"</span> blink cursor on error, instead of beeping\n\n\n<span class=\"token string\">\"\"</span>\"<span class=\"token string\">\" Key Bindings\n\n\"</span> move vertically by visual line <span class=\"token punctuation\">(</span>don<span class=\"token string\">'t skip wrapped lines)\nnmap j gj\nnmap k gk\n\n\n\"\"\"\" Vim Appearance\n\n\" put colorscheme files in ~/.vim/colors/\ncolorscheme murphy      \" good colorschemes: murphy, slate, molokai, badwolf, solarized\n\n\" use filetype-based syntax highlighting, ftplugins, and indentation\nsyntax enable\nfiletype plugin indent on\n\n\n\"\"\"\" Tab settings\n\nset tabstop=4           \" width that a &lt;TAB> character displays as\nset expandtab           \" convert &lt;TAB> key-presses to spaces\nset shiftwidth=4        \" number of spaces to use for each step of (auto)indent\nset softtabstop=4       \" backspace after pressing &lt;TAB> will remove up to this many spaces\n\nset autoindent          \" copy indent from current line when starting a new line\nset smartindent         \" even better autoindent (e.g. add indent after '</span><span class=\"token punctuation\">{</span>'<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token string\">\"\"</span>\"<span class=\"token string\">\" Search settings\n\nset incsearch           \"</span> search as characters are entered\n<span class=\"token builtin class-name\">set</span> hlsearch            <span class=\"token string\">\" highlight matches\n\n\"</span> turn off search highlighting with <span class=\"token operator\">&lt;</span>CR<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>carriage-return<span class=\"token punctuation\">)</span>\nnnoremap <span class=\"token operator\">&lt;</span>CR<span class=\"token operator\">></span> :nohlsearch<span class=\"token operator\">&lt;</span>CR<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>CR<span class=\"token operator\">></span>\n\n\n<span class=\"token string\">\"\"</span>\"<span class=\"token string\">\" Miscellaneous settings that might be worth enabling\n\n\"</span><span class=\"token builtin class-name\">set</span> cursorline         <span class=\"token string\">\" highlight current line\n\"</span><span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">background</span><span class=\"token operator\">=</span>dark    <span class=\"token string\">\" configure Vim to use brighter colors\n\"</span><span class=\"token builtin class-name\">set</span> autoread           \" autoreload the <span class=\"token function\">file</span> <span class=\"token keyword\">in</span> Vim <span class=\"token keyword\">if</span> it has been changed outside of Vim</code></pre></div>","frontmatter":{"date":"2018-8-30","path":"/blog/linux","title":"linux setup","author":"Mike Marsello","template":"blog","desc":"linux default setup"}}},"pageContext":{}},"staticQueryHashes":[]}